# yaml-language-server: $schema=bundle_config_schema.json
resources:
  jobs:
    maru-bronze-silverjob:
      name: "[${bundle.target}] MarU bronze and silver"
      run_as:
        service_principal_name: ${var.service_principal_id}
      tasks:
        - task_key: vessel-battery-bronze
          task_type: pipeline
          description: "Load MarU Vessel Battery from raw to bronze"
          pipeline_task:
            pipeline_id: ${resources.pipelines.maru-vessel-battery-bronze.id}
        - task_key: vessel-battery-silver
          task_type: pipeline
          description: "Load MarU Vessel Battery from Bronze to Silver"
          pipeline_task:
            pipeline_id: ${resources.pipelines.maru-vessel-battery-silver.id}
          depends_on:
            - task_key: vessel-battery-bronze
        - task_key: vessel-aux-and-boiler-bronze
          task_type: pipeline
          description: "Load MarU Vessel Aux and Boiler data from raw to bronze"
          pipeline_task:
            pipeline_id: ${resources.pipelines.maru-vessel-aux-and-boiler-bronze.id}
        - task_key: vessel-aux-and-boiler-silver
          task_type: notebook
          description: "Transform MarU Vessel Aux and Boiler data from bronze to silver"
          depends_on:
            - task_key: vessel-aux-and-boiler-bronze
          notebook_task:
            notebook_path: ./vessel/vessel_aux_boiler/vessel_aux_boiler_silver.py
            source: WORKSPACE   
          job_cluster_key: maru_vessel_aux_and_boiler_cluster
        - task_key: emission-variables-bronze
          task_type: pipeline
          description: "Load MarU Emission Variables from raw to bronze"
          pipeline_task:
            pipeline_id: ${resources.pipelines.maru-emission-variables-bronze.id}
        - task_key: emission-variables-silver
          task_type: pipeline
          description: "Load MarU Emission Variables from Bronze to Silver"
          pipeline_task:
            pipeline_id: ${resources.pipelines.maru-emission-variables-silver.id}
          depends_on:
            - task_key: emission-variables-bronze
        - task_key: vessel-type-bronze
          task_type: pipeline
          description: "Load MarU Vessel Type from raw to bronze"
          pipeline_task:
            pipeline_id: ${resources.pipelines.maru-vessel-type-bronze.id}
        - task_key: vessel-type-silver
          task_type: pipeline
          description: "Load MarU Vessel Type from Bronze to Silver"
          pipeline_task:
            pipeline_id: ${resources.pipelines.maru-vessel-type-silver.id}
          depends_on:
            - task_key: vessel-type-bronze
      job_clusters:
        - job_cluster_key: maru_vessel_aux_and_boiler_cluster
          new_cluster:
            cluster_name: ""
            spark_version: 13.3.x-scala2.12
            azure_attributes:
              first_on_demand: 1
              availability: ON_DEMAND_AZURE
              spot_bid_max_price: -1
            node_type_id: Standard_DS3_v2
            spark_env_vars:
              PYSPARK_PYTHON: /databricks/python3/bin/python3
              ENVIRONMENT: ${bundle.target}
            enable_elastic_disk: true
            data_security_mode: USER_ISOLATION
            num_workers: 1      
  pipelines:
    maru-vessel-aux-and-boiler-bronze:
      name: "[${bundle.target}] MarU Vessel Aux and Boiler (bronze)"
      catalog: bronze_${bundle.target}
      target: maru
      clusters:
        - label: default
          num_workers: 1
          spark_env_vars:
            ENVIRONMENT: ${bundle.target}
      libraries:
        - notebook:
            path: ./vessel/vessel_aux_boiler/vessel_aux_boiler_bronze.py
      continuous: false
    maru-vessel-battery-bronze:
      name: "[${bundle.target}] MarU Vessel Battery (bronze)"
      catalog: bronze_${bundle.target}
      target: maru
      clusters:
        - label: default
          num_workers: 1
          spark_env_vars:
            ENVIRONMENT: ${bundle.target}
      libraries:
        - notebook:
            path: ./vessel/vessel_battery/vessel_battery_bronze.py
      continuous: false
    maru-vessel-battery-silver:
      name: "[${bundle.target}] MarU Vessel Battery (silver)"
      catalog: silver_${bundle.target}
      target: maru
      clusters:
        - label: default
          num_workers: 1
          spark_env_vars:
            ENVIRONMENT: ${bundle.target}
      libraries:
        - notebook:
            path: ./vessel/vessel_battery/vessel_battery_silver.py
      continuous: false
    maru-emission-variables-bronze:
      name: "[${bundle.target}] MarU Emission Variables (bronze)"
      catalog: bronze_${bundle.target}
      target: maru
      clusters:
        - label: default
          num_workers: 1
          spark_env_vars:
            ENVIRONMENT: ${bundle.target}
      libraries:
        - notebook:
            path: ./emission_variables/emission_variables_bronze.py
      continuous: false
    maru-emission-variables-silver:
      name: "[${bundle.target}] MarU Emission Variables (silver)"
      catalog: silver_${bundle.target}
      target: maru
      clusters:
        - label: default
          num_workers: 1
          spark_env_vars:
            ENVIRONMENT: ${bundle.target}
      libraries:
        - notebook:
            path: ./emission_variables/emission_variables_silver.py
      continuous: false
    maru-vessel-type-bronze:
      name: "[${bundle.target}] MarU Vessel Type (bronze)"
      catalog: bronze_${bundle.target}
      target: maru
      clusters:
        - label: default
          num_workers: 1
          spark_env_vars:
            ENVIRONMENT: ${bundle.target}
      libraries:
        - notebook:
            path: ./vessel/vessel_type/vessel_type_bronze.py
      continuous: false
    maru-vessel-type-silver:
      name: "[${bundle.target}] MarU Vessel Type (silver)"
      catalog: silver_${bundle.target}
      target: maru
      clusters:
        - label: default
          num_workers: 1
          spark_env_vars:
            ENVIRONMENT: ${bundle.target}
      libraries:
        - notebook:
            path: ./vessel/vessel_type/vessel_type_silver.py
      continuous: false

